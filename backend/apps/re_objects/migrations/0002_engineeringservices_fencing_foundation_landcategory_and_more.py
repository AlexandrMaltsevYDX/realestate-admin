# Generated by Django 4.2.5 on 2023-11-25 15:34

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('re_objects', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='EngineeringServices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(help_text='Наличие инженерных услуг', max_length=50, verbose_name='Инженерные услуги')),
            ],
        ),
        migrations.CreateModel(
            name='Fencing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(help_text='Ограждение участка', max_length=50, verbose_name='Ограждение участка')),
            ],
        ),
        migrations.CreateModel(
            name='Foundation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(help_text='Тип фундамента', max_length=50, verbose_name='Тип фундамента')),
            ],
        ),
        migrations.CreateModel(
            name='LandCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(help_text='Категория земли', max_length=50, verbose_name='Категория земли')),
            ],
        ),
        migrations.CreateModel(
            name='Ownership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(help_text='Форма собственности объекта', max_length=50, verbose_name='Форма собственности')),
            ],
        ),
        migrations.CreateModel(
            name='ReliefArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField(help_text='Рельеф участка', verbose_name='Рельеф участка')),
            ],
        ),
        migrations.CreateModel(
            name='TypeHouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='VillageFences',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(help_text='Заборы в деревне', max_length=50, verbose_name='Заборы в деревне')),
            ],
        ),
        migrations.CreateModel(
            name='WallMaterial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(help_text='Материал стен', max_length=50, verbose_name='Материал стен')),
            ],
        ),
        migrations.CreateModel(
            name='WindowsOrientation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(help_text='Ориентация окон', max_length=50, verbose_name='Ориентация окон')),
            ],
        ),
        migrations.AddField(
            model_name='reobject',
            name='buildings_of_vilages',
            field=models.PositiveIntegerField(help_text='Количество домов в поселке', null=True, verbose_name='Количество домов в поселке'),
        ),
        migrations.AddField(
            model_name='reobject',
            name='buildings_on_site',
            field=models.TextField(help_text='Здания на участке', max_length=1200, null=True, verbose_name='Здания на участке'),
        ),
        migrations.AddField(
            model_name='reobject',
            name='floor',
            field=models.PositiveIntegerField(help_text='Этаж в здании', null=True, verbose_name='Этаж'),
        ),
        migrations.AddField(
            model_name='reobject',
            name='kitchen_area',
            field=models.FloatField(help_text='Площадь кухни в помещении', null=True, verbose_name='Площадь кухни'),
        ),
        migrations.AddField(
            model_name='reobject',
            name='land_area',
            field=models.FloatField(help_text='Площадь участка', null=True, verbose_name='Площадь участка'),
        ),
        migrations.AddField(
            model_name='reobject',
            name='living_area',
            field=models.FloatField(help_text='Жилая площадь в помещении', null=True, verbose_name='Жилая площадь'),
        ),
        migrations.AddField(
            model_name='reobject',
            name='number_of_rooms',
            field=models.PositiveIntegerField(help_text='Количество комнат в помещении', null=True, verbose_name='Количество комнат'),
        ),
        migrations.AddField(
            model_name='reobject',
            name='number_of_storeys',
            field=models.PositiveIntegerField(help_text='Количество этажей в здании', null=True, verbose_name='Этажность'),
        ),
        migrations.AddField(
            model_name='reobject',
            name='total_area',
            field=models.FloatField(help_text='Общая площадь помещений', null=True, verbose_name='Общая площадь помещений'),
        ),
        migrations.AlterField(
            model_name='reobject',
            name='category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='re_objects.category'),
        ),
        migrations.AddField(
            model_name='reobject',
            name='engineering_services',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='re_objects.engineeringservices'),
        ),
        migrations.AddField(
            model_name='reobject',
            name='fencing',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='re_objects.fencing'),
        ),
        migrations.AddField(
            model_name='reobject',
            name='foundation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='re_objects.foundation'),
        ),
        migrations.AddField(
            model_name='reobject',
            name='land_category',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='re_objects.landcategory'),
        ),
        migrations.AddField(
            model_name='reobject',
            name='ownership',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='re_objects.ownership'),
        ),
        migrations.AddField(
            model_name='reobject',
            name='relief_area',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='re_objects.reliefarea'),
        ),
        migrations.AddField(
            model_name='reobject',
            name='type_house',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='re_objects.typehouse'),
        ),
        migrations.AddField(
            model_name='reobject',
            name='village_fences',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='re_objects.villagefences'),
        ),
        migrations.AddField(
            model_name='reobject',
            name='wall_material',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='re_objects.wallmaterial'),
        ),
        migrations.AddField(
            model_name='reobject',
            name='windows_orientation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='re_objects.windowsorientation'),
        ),
    ]
